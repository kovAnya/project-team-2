{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,yGAMMC,SAMAC,EAAiBC,SAASC,cAAc,iBACxCC,EAAkBF,SAASC,cAAc,uBACzCE,EAAgBH,SAASC,cAAc,WAGzCG,EAAa,GACbC,GAAc,E,SAcIC,EAAWC,G,OAAXC,EAAUC,MAAAC,KAAAC,U,UAAVH,I,OAAAA,EAAfI,EAAAhB,EAAA,CAAAgB,EAAAC,GAAAC,MAAA,SAAAC,EAA0BR,G,IAEvBS,E,2FAAoBC,EAAMC,IAC9B,qDAAoFC,OAA/BC,EAAAC,OAAO,0BAA2CF,OAAnBf,EAAW,UAAae,OAALZ,EAAK,yB,cADxGS,EAAWM,EAAAC,KAGjBlB,GAAc,EACD,IAATE,GACFiB,EAAAC,WAAWC,MAAMV,EAAYW,KAAKC,eAEpCC,QAAQC,IAAId,EAAYW,M,kBACjBX,EAAYW,KAAKI,S,kCAExBF,QAAQG,MAAKV,EAAAW,I,2DAZexB,MAAAC,KAAAC,U,UAgBjBuB,I,OAAAA,EAAftB,EAAAhB,EAAA,CAAAgB,EAAAC,GAAAC,MAAA,SAAAC,EAA0BoB,G,yEACxBA,EAAEC,iBACFhC,EAAaF,EAAgBmC,MAC7BR,QAAQC,IAAI5B,EAAgBmC,OAC5BtC,EAAe2B,QACfvB,EAAcmC,UAAY,G,UACpB,EAAAC,EAAAC,sBAAqBlC,EAAWc,EAAAqB,O,4CANfhC,MAAAC,KAAAC,U,CASzBa,EAAAC,WAAWiB,GAAG,aAAa,SAAAC,GACzB,IAAMC,EAAcD,EAAMF,KAC1BtC,EAAcmC,UAAY,GACtBjC,GACF,EAAAkC,EAAAC,uBAAqB,EAAAK,EAAAC,qBAAoBF,KAEzC,EAAAL,EAAAC,sBAAqBlC,EAAWsC,KAElC,EAAAG,EAAAC,aACA,EAAAD,EAAAE,a,IAGFlD,EAAemD,iBAAiB,U,SArBNf,G,OAAXD,EAAUzB,MAAAC,KAAAC,U","sources":["src/js/search_movie.js"],"sourcesContent":["import { ApiKey, page } from './refs';\nimport { pagination } from './pagination';\nimport { fetchMoviesTrending } from './fetchMoviesTrending';\nimport { onScroll, onToTopBtn } from './scroll';\nimport { renderMoviesTrending } from './renderMoviesTrending';\n\nconst axios = require('axios').default;\n\n// import allGenres from '../data/genres.json';\n\nimport { renderMoviesTrending } from './renderMoviesTrending';\n\nconst searchFilmForm = document.querySelector('.header__form');\nconst searchFilmInput = document.querySelector('.header__form-input');\nconst moviesElement = document.querySelector('.movies');\n\n// let pError = document.querySelector('.header__error');\nlet inputValue = '';\nlet searchFilms = true;\n// const URL_SEARCH = `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}&language=en-US&query=${inputValue}&page=1&include_adult=false`;\n\n// Создание нового свойства с годом (для всех)\n// function createYear(obj) {\n//   return obj.release_date ? obj.release_date.split('-')[0] : '';\n// }\n\n// Извлечение локальных жанров из json файла\n// function getGenres() {\n//   const { genres } = allGenres;\n//   return genres;\n// }g\n\nexport async function fetchFilms(page) {\n  try {\n    const fetchResult = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}&language=en-US&query=${inputValue}&page=${page}&include_adult=false`\n    );\n    searchFilms = false;\n    if (page === 1) {\n      pagination.reset(fetchResult.data.total_results);\n    }\n    console.log(fetchResult.data);\n    return fetchResult.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchFilm(e) {\n  e.preventDefault();\n  inputValue = searchFilmInput.value;\n  console.log(searchFilmInput.value);\n  searchFilmForm.reset();\n  moviesElement.innerHTML = '';\n  await renderMoviesTrending(fetchFilms(page));\n}\n\npagination.on('afterMove', event => {\n  const currentPage = event.page;\n  moviesElement.innerHTML = '';\n  if (searchFilms) {\n    renderMoviesTrending(fetchMoviesTrending(currentPage));\n  } else {\n    renderMoviesTrending(fetchFilms(currentPage));\n  }\n  onScroll();\n  onToTopBtn();\n});\n\nsearchFilmForm.addEventListener('submit', searchFilm);\n\n// .then(data => data.json())\n\n// .then(res => {\n//   console.log(res.results);\n//   if (!res.results.length) {\n//     pError.textContent =\n//       'Search result not successful. Enter the correct movie name and try again.';\n//   }\n//   if (!!res.results.length) {\n//     moviesList.innerHTML = '';\n//     pError.textContent = '';\n//   }\n//   res.results.forEach(movie => {\n//     moviesList.insertAdjacentElement(\n//       'beforeend',\n//       createCardFunc(\n//         movie.poster_path,\n//         movie.title,\n//         movie.genre_ids,\n//         movie.release_date\n//       )\n//     );\n//   });\n//   renderFilms = res.results;\n//   return renderFilms;\n// })\n// .catch(err => console.log(err));\n"],"names":["$bpxeT","parcelRequire","default","$2bb8c70deac3ffd5$var$searchFilmForm","document","querySelector","$2bb8c70deac3ffd5$var$searchFilmInput","$2bb8c70deac3ffd5$var$moviesElement","$2bb8c70deac3ffd5$var$inputValue","$2bb8c70deac3ffd5$var$searchFilms","$2bb8c70deac3ffd5$export$651946d2de0aa03","page1","$2bb8c70deac3ffd5$var$_fetchFilms","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","fetchResult","$2bb8c70deac3ffd5$require$axios","get","concat","$4Nugj","ApiKey","_ctx","sent","$jcFG7","pagination","reset","data","total_results","console","log","results","error","t0","$2bb8c70deac3ffd5$var$_searchFilm","e","preventDefault","value","innerHTML","$lnzPg","renderMoviesTrending","page","on","event","currentPage","$cx81q","fetchMoviesTrending","$j1Fxp","onScroll","onToTopBtn","addEventListener"],"version":3,"file":"index.6e4c5449.js.map"}