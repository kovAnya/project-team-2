{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAEMC,QAMAC,EAAiBC,SAASC,cAAc,iBACxCC,EAAkBF,SAASC,cAAc,uBACzCE,EAAgBH,SAASC,cAAc,WAGzCG,EAAa,G,SAcFC,EAAWC,G,OAAXC,EAAUC,MAAAC,KAAAC,U,UAAVH,I,OAAAA,EAAfI,EAAAf,EAAA,CAAAe,EAAAC,GAAAC,MAAA,SAAAC,EAA0BR,G,IAEhBS,E,2FAAoBC,EAAMC,IAC9B,qDAAoFC,OAA/BC,EAAAC,OAAO,0BAA2CF,OAAnBd,EAAW,UAAac,OAALZ,EAAK,yB,cADxGS,EAAWM,EAAAC,KAGjBC,QAAQC,IAAIT,EAAYU,M,kBACjBV,EAAYU,M,gCAEnBF,QAAQG,MAAKL,EAAAM,I,0DARQnB,MAAAC,KAAAC,U,UAYVkB,I,OAAAA,EAAfjB,EAAAf,EAAA,CAAAe,EAAAC,GAAAC,MAAA,SAAAC,EAA0Be,G,yEACxBA,EAAEC,iBACF1B,EAAaF,EAAgB6B,MAC7BR,QAAQC,IAAItB,EAAgB6B,OAC5BhC,EAAeiC,QACf7B,EAAc8B,UAAY,G,UACpB,EAAAC,EAAAC,sBAAqB9B,EAAWc,EAAAiB,O,4CANf5B,MAAAC,KAAAC,U,CASzBX,EAAesC,iBAAiB,U,SATNR,G,OAAXD,EAAUpB,MAAAC,KAAAC,U","sources":["src/js/search_movie.js"],"sourcesContent":["import { ApiKey, page } from './refs';\n\nconst axios = require('axios').default;\n\n// import allGenres from '../data/genres.json';\n\nimport { renderMoviesTrending } from './renderMoviesTrending';\n\nconst searchFilmForm = document.querySelector('.header__form');\nconst searchFilmInput = document.querySelector('.header__form-input');\nconst moviesElement = document.querySelector('.movies');\n\n// let pError = document.querySelector('.header__error');\nlet inputValue = '';\n// const URL_SEARCH = `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}&language=en-US&query=${inputValue}&page=1&include_adult=false`;\n\n// Создание нового свойства с годом (для всех)\n// function createYear(obj) {\n//   return obj.release_date ? obj.release_date.split('-')[0] : '';\n// }\n\n// Извлечение локальных жанров из json файла\n// function getGenres() {\n//   const { genres } = allGenres;\n//   return genres;\n// }g\n\nasync function fetchFilms(page) {\n  try {\n    const fetchResult = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}&language=en-US&query=${inputValue}&page=${page}&include_adult=false`\n    );\n    console.log(fetchResult.data);\n    return fetchResult.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchFilm(e) {\n  e.preventDefault();\n  inputValue = searchFilmInput.value;\n  console.log(searchFilmInput.value);\n  searchFilmForm.reset();\n  moviesElement.innerHTML = '';\n  await renderMoviesTrending(fetchFilms(page));\n}\n\nsearchFilmForm.addEventListener('submit', searchFilm);\n\n// .then(data => data.json())\n\n// .then(res => {\n//   console.log(res.results);\n//   if (!res.results.length) {\n//     pError.textContent =\n//       'Search result not successful. Enter the correct movie name and try again.';\n//   }\n//   if (!!res.results.length) {\n//     moviesList.innerHTML = '';\n//     pError.textContent = '';\n//   }\n//   res.results.forEach(movie => {\n//     moviesList.insertAdjacentElement(\n//       'beforeend',\n//       createCardFunc(\n//         movie.poster_path,\n//         movie.title,\n//         movie.genre_ids,\n//         movie.release_date\n//       )\n//     );\n//   });\n//   renderFilms = res.results;\n//   return renderFilms;\n// })\n// .catch(err => console.log(err));\n"],"names":["$bpxeT","parcelRequire","default","$2bb8c70deac3ffd5$var$searchFilmForm","document","querySelector","$2bb8c70deac3ffd5$var$searchFilmInput","$2bb8c70deac3ffd5$var$moviesElement","$2bb8c70deac3ffd5$var$inputValue","$2bb8c70deac3ffd5$var$fetchFilms","page1","$2bb8c70deac3ffd5$var$_fetchFilms","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","fetchResult","$2bb8c70deac3ffd5$require$axios","get","concat","$4Nugj","ApiKey","_ctx","sent","console","log","data","error","t0","$2bb8c70deac3ffd5$var$_searchFilm","e","preventDefault","value","reset","innerHTML","$lnzPg","renderMoviesTrending","page","addEventListener"],"version":3,"file":"index.7f8d3c00.js.map"}